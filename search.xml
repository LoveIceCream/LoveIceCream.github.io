<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Code</title>
    <url>/2021/04/18/Code/</url>
    <content><![CDATA[<ul>
<li>记录日常刷题的内容</li>
</ul>
<a id="more"></a>

]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>刷题记录</tag>
      </tags>
  </entry>
  <entry>
    <title>CondaCMD</title>
    <url>/2021/04/18/CondaCMD/</url>
    <content><![CDATA[<ul>
<li>记录常用的Conda命令</li>
</ul>
<a id="more"></a>



<h3 id="虚拟环境管理"><a href="#虚拟环境管理" class="headerlink" title="虚拟环境管理"></a>虚拟环境管理</h3><ul>
<li>查看环境</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda info -e</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>创建环境</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 创建的时候指定环境名称 </span><br><span class="line">conda create -n test_py3.4</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建的时候指定同时安装的包及版本</span><br><span class="line">conda create -n test_py3.4 python&#x3D;3.4 pandas</span><br></pre></td></tr></table></figure>
<ul>
<li>激活环境</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda activate test_py3.4</span><br></pre></td></tr></table></figure>


<ul>
<li>disable环境</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure>


<ul>
<li>删除环境</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda remove -n tf --all</span><br><span class="line">&#x2F;&#x2F; </span><br><span class="line">conda env remove -n tf</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<ul>
<li>拷贝环境</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 本机</span><br><span class="line">conda create --clone tensorflow --name tf</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 从其他服务器 从服务器A 拷贝 pythonenv 环境到 服务器B</span><br><span class="line">&#x2F;&#x2F; 1.先在A服务器 激活pythonenv环境</span><br><span class="line">conda activate pythonenv</span><br><span class="line">&#x2F;&#x2F; 2.在A服务器  导出移植文件 导出文件可随意命名</span><br><span class="line">conda env export &gt; pythonenv.yml</span><br><span class="line">&#x2F;&#x2F; 3.将文件从A服务器 拷贝 到B服务器</span><br><span class="line">&#x2F;&#x2F; 4.在B服务器上创建环境</span><br><span class="line">conda env create -f pythonenv.yaml</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; tips:</span><br><span class="line">&#x2F;&#x2F; 1.如果移植base环境的话，需要更名，或者备份原来的，具体操作需要注意</span><br><span class="line">&#x2F;&#x2F; 2. pythonenv.yaml 里面可以编辑 可以编辑里面的一些依赖或者名字</span><br></pre></td></tr></table></figure>




<h3 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h3><ul>
<li>查看已安装的包</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 查看当前环境的包列表</span><br><span class="line">conda list </span><br><span class="line">&#x2F;&#x2F; 查看指定环境的包列表</span><br><span class="line">conda list -n  env_name</span><br></pre></td></tr></table></figure>


<ul>
<li>查找包</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda search pkg_name</span><br></pre></td></tr></table></figure>


<ul>
<li>安装包</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda install matplotlib</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<ul>
<li>更新包</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda upgrade --all</span><br><span class="line"></span><br><span class="line">conda upgrade numpy</span><br></pre></td></tr></table></figure>


<ul>
<li>删除包</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda remove matplotlib </span><br></pre></td></tr></table></figure>


<ul>
<li>修改镜像源</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure>


<ul>
<li></li>
</ul>
]]></content>
      <categories>
        <category>CMD</category>
      </categories>
      <tags>
        <tag>Conda</tag>
        <tag>CMD</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>IDEA</title>
    <url>/2021/04/19/IDEA/</url>
    <content><![CDATA[<ul>
<li>IDEA相关设置及使用中遇到的问题记录</li>
</ul>
<a id="more"></a>


<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><h2 id="问题记录"><a href="#问题记录" class="headerlink" title="问题记录"></a>问题记录</h2><h3 id="low-memory"><a href="#low-memory" class="headerlink" title="low memory"></a>low memory</h3><ul>
<li>打开右下角的内存显示功能</li>
<li>通过 HELP 中的 Find Action 功能找到  Edit Custom VM Options</li>
<li>或直接找到 /Users/wangzhen/Library/Application Support/JetBrains/IntelliJIdea2021.1/idea.vmoptions 下的文件，编辑</li>
<li>-Xms128m  // 最小的内存</li>
<li>-Xmx3072m // 最大的内存</li>
</ul>
<p>// todo 查一下是项目还是单窗口之类的详细信息</p>
]]></content>
      <categories>
        <category>IDEA</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>IDEA</tag>
      </tags>
  </entry>
  <entry>
    <title>IceCream</title>
    <url>/2021/04/18/IceCream/</url>
    <content><![CDATA[<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://raw.githubusercontent.com/LoveIceCream/imageStorage/main/20210420234223.JPG"
                      alt="冰淇淋"
                ></p>
]]></content>
      <categories>
        <category>照片</category>
      </categories>
      <tags>
        <tag>PHOTO</tag>
        <tag>TRAVEL</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaBasic</title>
    <url>/2021/04/18/JavaBasic/</url>
    <content><![CDATA[<ul>
<li>java基础知识补足，不系统，随想随记</li>
</ul>
<a id="more"></a>

<h1 id="JAVA八股文"><a href="#JAVA八股文" class="headerlink" title="JAVA八股文"></a>JAVA八股文</h1><ol>
<li>Java八股文一：java基础知识</li>
<li>Java八股文二：java集合框架</li>
<li>Java八股文三：Java多线程</li>
<li>Java八股文四：Java虚拟机</li>
<li>Java八股文五：MySQL(Inno DB)</li>
<li>Java八股文六：spring相关</li>
<li>Java八股文七：计算机网络</li>
<li>Java八股文八：MQ消息队列</li>
<li>Java八股文九：Redis</li>
<li>Java八股文十：Nginx</li>
</ol>
<h1 id="看书"><a href="#看书" class="headerlink" title="看书"></a>看书</h1><ul>
<li>java基础</li>
</ul>
<p>java核心技术 卷一</p>
<ul>
<li>Java虚拟机</li>
</ul>
<p>深入理解java虚拟机</p>
<ul>
<li>高并发</li>
</ul>
<p>Java高并发程序设计</p>
<ul>
<li>设计模式</li>
</ul>
<p>设计模式之禅</p>
<p>大话设计模式</p>
<ul>
<li>mysql</li>
</ul>
<p>mysql 必知必会</p>
<p>高性能mysql</p>
<p>innoDB存储引擎</p>
<ul>
<li>redis</li>
</ul>
<p>Redis设计与实现</p>
<ul>
<li>计算机网络</li>
<li>数据结构和算法</li>
</ul>
<p>剑指offer</p>
<p>编程之美</p>
<p><a class="link"   href="https://zhuanlan.zhihu.com/p/147263542" >https://zhuanlan.zhihu.com/p/147263542<i class="fas fa-external-link-alt"></i></a></p>
<h1 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a>赋值</h1><ul>
<li>关于连续赋值</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 一般情况 可以拆分为 y &#x3D; 1；x &#x3D; y；</span><br><span class="line">x &#x3D; y &#x3D; 1；</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 特殊情况</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>LinuxCMD</title>
    <url>/2021/04/18/LinuxCMD/</url>
    <content><![CDATA[<ul>
<li>记录常用的Linux命令</li>
</ul>
<a id="more"></a>
]]></content>
      <categories>
        <category>CMD</category>
      </categories>
      <tags>
        <tag>CMD</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ML</title>
    <url>/2021/04/18/ML/</url>
    <content><![CDATA[<ul>
<li>跟台大李宏毅老师的课程学机器学习课程</li>
<li>跟jure大神学图机器学习课程</li>
</ul>
<a id="more"></a>
]]></content>
      <categories>
        <category>ML</category>
      </categories>
      <tags>
        <tag>ML</tag>
        <tag>Basic</tag>
      </tags>
  </entry>
  <entry>
    <title>Python</title>
    <url>/2021/04/18/Python/</url>
    <content><![CDATA[<ul>
<li>Python基础记录</li>
<li>没系统学过python，用到什么查什么，哪里不会点哪里</li>
</ul>
<a id="more"></a>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Basic</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring</title>
    <url>/2021/04/18/Spring/</url>
    <content><![CDATA[<ul>
<li>记录学习spring的记录</li>
<li>从0开始</li>
</ul>
<a id="more"></a>


]]></content>
      <categories>
        <category>java</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 基本命令</title>
    <url>/2021/04/18/hexoCommandLine/</url>
    <content><![CDATA[<p>记录hexo的命令行代码</p>
<a id="more"></a>



<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CMD</category>
      </categories>
      <tags>
        <tag>CMD</tag>
        <tag>HEXO</tag>
        <tag>BLOG</tag>
      </tags>
  </entry>
  <entry>
    <title>算法分析与设计</title>
    <url>/2021/04/18/%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<ul>
<li>算法分析与设计课程记录</li>
</ul>
<a id="more"></a>



<ul>
<li>期末考试和课程报告各占50%</li>
</ul>
<h1 id="Induction"><a href="#Induction" class="headerlink" title="Induction"></a>Induction</h1><ul>
<li>归纳法</li>
</ul>
<h1 id="Asymptotic-Performance"><a href="#Asymptotic-Performance" class="headerlink" title="Asymptotic Performance"></a>Asymptotic Performance</h1><ul>
<li>渐进性能</li>
<li>How does the algorithm behave as the problem size gets very large?<ul>
<li>Running time</li>
<li>Memory/storage requirements</li>
<li>Bandwidth/power requirements/logic gates/etc</li>
</ul>
</li>
</ul>
<h2 id="Asymptotic-Notation"><a href="#Asymptotic-Notation" class="headerlink" title="Asymptotic Notation"></a>Asymptotic Notation</h2><ul>
<li>渐进表示法</li>
<li>算法分析<ul>
<li> 时间复杂度：O(n)，O($n^2$)，O($nlgn$)</li>
<li>空间复杂度<ul>
<li>输入规模</li>
<li>运行时间</li>
<li>最好情况、最坏情况、平均情况</li>
</ul>
</li>
</ul>
</li>
</ul>
<h1 id="常见数据结构与算法的时间、空间复杂度总结"><a href="#常见数据结构与算法的时间、空间复杂度总结" class="headerlink" title="常见数据结构与算法的时间、空间复杂度总结"></a>常见数据结构与算法的时间、空间复杂度总结</h1><h2 id="概览"><a href="#概览" class="headerlink" title="概览"></a>概览</h2><ul>
<li>知乎上搜到的比较全的图</li>
<li>图片转自：<a class="link"   href="https://zhuanlan.zhihu.com/p/143358017" >https://zhuanlan.zhihu.com/p/143358017<i class="fas fa-external-link-alt"></i></a></li>
</ul>
<h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic1.zhimg.com/80/v2-adb1873fd4b67f7e539a5e272e177360_1440w.jpg"
                     
                ></p>
<h4 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic2.zhimg.com/80/v2-975678b7af42d4c482b4a7c94bb36bb5_1440w.jpg"
                     
                ></p>
<h4 id="图"><a href="#图" class="headerlink" title="图"></a>图</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic4.zhimg.com/80/v2-032e0d38f3f6114114248e79e07fc5d7_1440w.jpg"
                     
                ></p>
<h4 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic2.zhimg.com/80/v2-ae19249c2f3624cc6869430f0221b831_1440w.jpg"
                     
                ></p>
<h4 id="搜索算法"><a href="#搜索算法" class="headerlink" title="搜索算法"></a>搜索算法</h4><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://pic2.zhimg.com/80/v2-c9cd63215e0c2bf8a833e26c946d0745_1440w.jpg"
                     
                ></p>
<h2 id="常用算法复杂度分析"><a href="#常用算法复杂度分析" class="headerlink" title="常用算法复杂度分析"></a>常用算法复杂度分析</h2><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><h3 id="堆-1"><a href="#堆-1" class="headerlink" title="堆"></a>堆</h3><ul>
<li>Heapify()</li>
<li>BuildHeap()</li>
<li>Heapsort()</li>
</ul>
<h3 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h3><h3 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h3><h3 id="线性时间复杂度-计数排序"><a href="#线性时间复杂度-计数排序" class="headerlink" title="线性时间复杂度-计数排序"></a>线性时间复杂度-计数排序</h3><h3 id="基数排序Radix-Sort"><a href="#基数排序Radix-Sort" class="headerlink" title="基数排序Radix Sort"></a>基数排序Radix Sort</h3><ul>
<li>LSD（Least sgnificant digital）<ul>
<li>从低位开始，适合位数少的</li>
</ul>
</li>
<li>MSD（Most sgnificant digital）<ul>
<li>从高位开始</li>
</ul>
</li>
</ul>
<h3 id="桶排序Bucket-Sort"><a href="#桶排序Bucket-Sort" class="headerlink" title="桶排序Bucket Sort"></a>桶排序Bucket Sort</h3><h3 id="Order-Statistics"><a href="#Order-Statistics" class="headerlink" title="Order Statistics"></a>Order Statistics</h3><ul>
<li>顺序统计量-往下 随机选择法</li>
</ul>
<h3 id="Randomized-Selection"><a href="#Randomized-Selection" class="headerlink" title="Randomized Selection"></a>Randomized Selection</h3><h3 id="Structures-for-Dynamic-Sets"><a href="#Structures-for-Dynamic-Sets" class="headerlink" title="Structures for Dynamic Sets"></a>Structures for Dynamic Sets</h3><h3 id="BST"><a href="#BST" class="headerlink" title="BST"></a>BST</h3><h3 id="Red-Black-Tree"><a href="#Red-Black-Tree" class="headerlink" title="Red-Black Tree"></a>Red-Black Tree</h3><h3 id="Skip-Lists"><a href="#Skip-Lists" class="headerlink" title="Skip Lists"></a>Skip Lists</h3><h3 id="Hashing"><a href="#Hashing" class="headerlink" title="Hashing"></a>Hashing</h3><h3 id="Dynamic-Programming"><a href="#Dynamic-Programming" class="headerlink" title="Dynamic Programming"></a>Dynamic Programming</h3><ul>
<li>算法思想</li>
<li>以斐波那契数列为例 ${F_n = F_(n-2)+F_(n-1)}$</li>
<li></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 递归算法</span><br><span class="line">    public static int fibnacci_recurision(int n) &#123;</span><br><span class="line">        if (n &#x3D;&#x3D; 1 || n &#x3D;&#x3D; 2) &#123;</span><br><span class="line">            return 1;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return fibnacci_recurision(n - 1) + fibnacci_recurision(n - 2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#x2F;&#x2F; 非递归算法</span><br><span class="line">    public static int fibnacci_not_recurision(int n) &#123;</span><br><span class="line">        ArrayList&lt;Integer&gt; fibArr &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">        fibArr.add(0);</span><br><span class="line">        fibArr.add(1);</span><br><span class="line">        fibArr.add(1);</span><br><span class="line">        if (n &#x3D;&#x3D; 1 || n &#x3D;&#x3D; 2) &#123;</span><br><span class="line">            return fibArr.get(n);</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i &#x3D; 3; i &lt;&#x3D; n; i++) &#123;</span><br><span class="line">            fibArr.add(fibArr.get(i - 1) + fibArr.get(i - 2));</span><br><span class="line">        &#125;</span><br><span class="line">        return fibArr.get(n);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li>利用递归的方法，会导致重复子问题被多次计算，例子：在斐波那契数列数列计算中，计算f(6)时会多次计算f(3)</li>
<li>而非递归算法，将f(3)一次计算完之后，就存在了数组中，不会被重复计算，节省了时间</li>
</ul>
<h4 id="动态规划的核心思想"><a href="#动态规划的核心思想" class="headerlink" title="动态规划的核心思想"></a>动态规划的核心思想</h4><ul>
<li>什么情况用动态规划<ul>
<li>求一些最优值，最优化问题可以用动态规划</li>
<li>涉及到最优子结构和重复子问题的</li>
</ul>
</li>
</ul>
<ol>
<li>最优子结构：要解决这个问题，只要解决这个子问题就好了，即可以找到一个递推式的问题。<ul>
<li>递推式，（可以用递归，但是可能会导致重复子问题）</li>
</ul>
</li>
<li>重复子问题：子问题会被重复计算好多次的，将子问题的结果存起来，防止重复计算。</li>
</ol>
<h5 id="钢条切割问题"><a href="#钢条切割问题" class="headerlink" title="钢条切割问题"></a>钢条切割问题</h5><p>![截屏2021-05-02 下午11.39.23](截屏2021-05-02 下午11.39.23.png)</p>
<p>最长公共子序列问题</p>
<h3 id="贪心算法"><a href="#贪心算法" class="headerlink" title="贪心算法"></a>贪心算法</h3><ul>
<li>在对问题求解的时候，只看重当前最优的情况，不保证最优解，但是在好多问题上能够得到最好的。</li>
</ul>
<h3 id="回溯"><a href="#回溯" class="headerlink" title="回溯"></a>回溯</h3><ul>
<li>深度优先 + 减枝</li>
</ul>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
        <tag>算法</tag>
        <tag>课程记录</tag>
      </tags>
  </entry>
</search>
